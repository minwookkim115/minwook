T = 10

N = 100

for tc in range(1, T + 1):
    int(input())  # 테스트 케이스 번호 입력 처리
    ladder = [list(map(int, input().split())) for _ in range(N)]

    # 내가 위치를 직접 움직여야함
    # 행 번호
    r = 99
    # 열 번호
    c = -1  # 마지막 행 검사해서 2이 곳 찾아야함

    # 2라고 표시된 곳을 마지막 줄에서 찾기
    for i in range(N):
        # 조건문 사용해서 ladder[r][i]가 2인곳 찾아서 c를 저장
        # ladder[r][i]가 2랑 같으면 c를 i로 바꾼다.
        if ladder[r][i] == 2:
            c = i

    # 우리가 거슬러 올라갈 위치를 찾음
    # (r, c)

    # 사다리 타기 게임의 규칙
    # 상하 방향으로 가는데 중간에 좌우 방향에 길이 있으면 좌우 부터

    # 좌 => 우 => 상 순서로 탐색
    # 한칸 움직이고 좌우보고 없으면 올라가고 반복 하다가 좌우에 있으면 그대로
    dr = [0, 0, -1]
    dc = [-1, 1, 0]

    # 반복을 몇번해야할지 모를때 / 언제 끝나는지는 알때 while 사용
    while r > 0:

        # 이동할 때마다 좌 => 우 => 상 순서로 탐색
        for d in range(3):
            # 다음 위치를 계산
            nr = r + dr[d]
            nc = c + dc[d]
            # 다음 위치가 유요한 인덱스 인지 검사
            # 길이 있어야 갈 수 있다.
            if 0 <= nr < N and 0 <= nc < N and ladder[nr][nc] == 1:
                # 갈수있으면 가자
                # 현재 위치 최신화
                r = nr
                c = nc
                # 내가 왔던 길은 다시 보지 않도록 0 으로 바꿈
                ladder[r][c] = 0
                # 길을 찾았으니 다음방향은 볼필요없고 다시 for 문 처음으로
                break

    # 반복문이 끝나면 r 이 0 이 되었을 거니까 출력

    print(f"#{tc} {c}")
